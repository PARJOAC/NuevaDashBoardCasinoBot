<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Server Settings - <%= serverName %></title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css"
    />
    <style>
      .card {
        border-radius: 15px;
      }
      .nav-tabs .nav-link {
        border-radius: 20px 20px 0 0;
        font-weight: 500;
      }
      .nav-tabs .nav-link.active {
        background-color: #198754;
        color: white;
        font-weight: 600;
      }
      .btn-save {
        background: linear-gradient(90deg, #28a745, #218838);
        color: white;
        border: none;
        transition: all 0.2s ease-in-out;
      }
      .btn-save:hover {
        background: linear-gradient(90deg, #218838, #1e7e34);
        transform: scale(1.05);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
      }
      .btn-back {
        border: 2px solid #6c757d;
        transition: all 0.2s ease-in-out;
      }
      .btn-back:hover {
        background: #f8f9fa;
        transform: scale(1.03);
      }
      .form-label {
        font-weight: 600;
      }
      .tab-pane {
        padding-top: 1rem;
      }
      #players-table img {
        transition: transform 0.2s ease, box-shadow 0.2s ease;
      }
      #players-table img:hover {
        transform: scale(1.1);
        box-shadow: 0 0 8px rgba(0, 0, 0, 0.3);
      }
      #players-table td a:hover span {
        text-decoration: underline;
      }
    </style>
  </head>
  <body class="bg-light">
    <%- include('partials/navbar') %>

    <div class="container my-5">
      <div class="text-center mb-4">
        <h2 class="fw-bold display-6">‚öô Server Settings</h2>
        <p class="text-muted fs-5">
          Manage all settings for <strong><%= serverName %></strong>.
        </p>
      </div>

      <form id="settings-form" class="card shadow-sm p-4">
        <input type="hidden" name="_csrf" value="<%= csrfToken %>" />

        <!-- üîπ Tabs -->
        <ul class="nav nav-tabs justify-content-center mb-4">
          <li class="nav-item">
            <button class="nav-link active px-4" data-bs-toggle="tab" data-bs-target="#general">
              üåç General
            </button>
          </li>
          <li class="nav-item">
            <button class="nav-link px-4" data-bs-toggle="tab" data-bs-target="#economy">
              üí∞ Economy
            </button>
          </li>
          <li class="nav-item">
            <button class="nav-link px-4" data-bs-toggle="tab" data-bs-target="#items">
              üéÅ Items
            </button>
          </li>
          <li class="nav-item">
            <button class="nav-link px-4" data-bs-toggle="tab" data-bs-target="#bets">
              üé≤ Bet Limits
            </button>
          </li>
          <li class="nav-item">
            <button class="nav-link px-4" data-bs-toggle="tab" data-bs-target="#options">
              ‚öô Options
            </button>
          </li>
          <li class="nav-item">
            <button class="nav-link px-4" data-bs-toggle="tab" data-bs-target="#players">
              üë• Players
            </button>
          </li>
        </ul>

        <div class="tab-content">
          <!-- üåç GENERAL -->
          <div class="tab-pane fade show active" id="general">
            <div class="mb-3">
              <label class="form-label">Language</label>
              <select name="lang" class="form-select">
                <% languages.forEach(lang => { %>
                  <option value="<%= lang.code %>" <%= (guild.lang || "") === lang.code ? "selected" : "" %>>
                    <%= lang.name %>
                  </option>
                <% }) %>
              </select>
            </div>

            <div class="mb-3">
              <label class="form-label">Command Channel</label>
              <select name="commandChannel" class="form-select">
                <option value="">None</option>
                <% channels.forEach(c => { %>
                  <option value="<%= c.id %>" <%= guild.commandChannel === c.id ? "selected" : "" %>>
                    #<%= c.name %>
                  </option>
                <% }) %>
              </select>
            </div>

            <div class="mb-3">
              <label class="form-label">Log Channel</label>
              <select name="logChannel" class="form-select">
                <option value="">None</option>
                <% channels.forEach(c => { %>
                  <option value="<%= c.id %>" <%= guild.logChannel === c.id ? "selected" : "" %>>
                    #<%= c.name %>
                  </option>
                <% }) %>
              </select>
            </div>
          </div>

          <!-- üí∞ ECONOMY -->
          <div class="tab-pane fade" id="economy">
            <div class="row">
              <% [
                { name: "initBalance", label: "Initial Balance" },
                { name: "maxBet", label: "Max Bet" },
                { name: "minBet", label: "Min Bet" },
                { name: "xpLevel", label: "XP per Level" },
                { name: "rewardWork", label: "Work Reward" },
                { name: "rewardDaily", label: "Daily Reward" },
                { name: "rewardWeekly", label: "Weekly Reward" },
                { name: "initMultiplier", label: "Multiplier" }
              ].forEach(field => { %>
                <div class="col-md-4 mb-3">
                  <label class="form-label"><%= field.label %></label>
                  <input type="text" class="form-control" name="<%= field.name %>" value="<%= guild[field.name] %>" />
                </div>
              <% }) %>
            </div>
          </div>

          <!-- üéÅ ITEMS -->
          <div class="tab-pane fade" id="items">
            <div class="row">
              <% [
                { name: "initBalloon", label: "Balloons" },
                { name: "initMobile", label: "Mobiles" },
                { name: "initBike", label: "Bikes" },
                { name: "initCar", label: "Cars" },
                { name: "initCastle", label: "Castles" },
                { name: "initLevel", label: "Initial Level" }
              ].forEach(field => { %>
                <div class="col-md-4 mb-3">
                  <label class="form-label"><%= field.label %></label>
                  <input type="text" inputmode="numeric" pattern="\d*" class="form-control" name="<%= field.name %>" value="<%= guild[field.name] %>" />
                </div>
              <% }) %>
            </div>
          </div>

          <!-- üé≤ BET LIMITS -->
          <div class="tab-pane fade" id="bets">
            <div class="row">
              <% betLevels.forEach(level => { %>
                <div class="col-md-4 mb-3">
                  <label class="form-label">Max Bet Level <%= level.level %></label>
                  <input type="text" inputmode="numeric" pattern="\d*" class="form-control" name="<%= level.field %>" value="<%= guild[level.field] %>" />
                </div>
              <% }) %>
            </div>
          </div>

          <!-- ‚öô OPTIONS -->
          <div class="tab-pane fade" id="options">
            <% const switches = [
              { name: "economyType", label: "Local Economy", checked: guild.economyType },
              { name: "levelStatus", label: "Level System", checked: guild.levelStatus },
              { name: "itemStatus", label: "Item System", checked: guild.itemStatus }
            ]; %>

            <% switches.forEach(sw => { %>
              <label style="display:flex;align-items:center;gap:10px;cursor:pointer;margin-bottom:10px;">
                <input type="checkbox" name="<%= sw.name %>" <%= sw.checked ? "checked" : "" %> style="display:none;" />
                <span class="circle-toggle" style="width:20px;height:20px;border-radius:50%;background:<%= sw.checked ? '#28a745' : '#ccc' %>;display:inline-block;transition:background 0.3s;"></span>
                <span><%= sw.label %></span>
              </label>
            <% }); %>
          </div>

          <!-- üë• Players Economy -->
          <div class="tab-pane fade" id="players">
            <div class="mb-3 d-flex justify-content-between flex-wrap gap-2">
              <input type="text" id="player-search" class="form-control w-100 w-md-50" placeholder="üîç Search by username or ID" />
              <button type="button" class="btn btn-primary" id="reload-players">
                <i class="bi bi-arrow-repeat"></i> Reload
              </button>
            </div>

            <div class="table-responsive">
              <table class="table table-hover table-striped table-bordered align-middle text-center shadow-sm rounded overflow-hidden">
                <thead class="table-dark">
                  <tr>
                    <th class="text-start">User</th>
                    <th>Balance</th>
                    <th>Level</th>
                    <th>XP</th>
                    <th>Balloons</th>
                    <th>Mobiles</th>
                    <th>Bikes</th>
                    <th>Cars</th>
                    <th>Castles</th>
                    <th>Max Bet</th>
                    <th>Multiplier</th>
                    <th>Actions</th>
                  </tr>
                </thead>
                <tbody id="players-table"></tbody>
              </table>
            </div>
            <div id="pagination" class="mt-3"></div>
          </div>
        </div>

        <!-- üîπ Buttons -->
        <div class="mt-4 d-flex justify-content-between flex-wrap gap-2">
          <a href="/dashboard" class="btn btn-outline-secondary d-flex align-items-center gap-2 rounded-pill px-3 py-2 btn-sm btn-lg-sm">
            <i class="bi bi-arrow-left-short fs-5"></i>
            <span class="d-none d-sm-inline">Back to Dashboard</span>
          </a>

          <button type="submit" class="btn btn-success d-flex align-items-center gap-2 rounded-pill px-3 py-2 btn-sm btn-lg-sm">
            <i class="bi bi-save fs-5"></i>
            <span class="d-none d-sm-inline">Save settings</span>
          </button>
        </div>
      </form>
    </div>

    <!-- ‚úÖ Modal -->
    <div class="modal fade" id="responseModal" tabindex="-1" aria-hidden="true">
      <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow">
          <div class="modal-header">
            <h5 class="modal-title fw-bold" id="responseTitle"></h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
          </div>
          <div class="modal-body fs-5" id="responseMessage"></div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
          </div>
        </div>
      </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    
    <script>
  const playersTable = document.getElementById("players-table");
  const searchInput = document.getElementById("player-search");
  const reloadBtn = document.getElementById("reload-players");
  const pagination = document.getElementById("pagination");

  // üîπ Cargar jugadores con paginaci√≥n
  async function loadPlayers(query = "", page = 1) {
    const res = await fetch(`/servers/<%= guild.guildId %>/players?search=${query}&page=${page}`);
    const data = await res.json();

    playersTable.innerHTML = data.players
      .map(
        (player) => `
          <tr>
            <td class="text-start">
              <a href="https://discord.com/users/${player.userId}" target="_blank" class="d-flex align-items-center text-decoration-none text-dark">
                <img src="${player.avatar}" alt="Avatar" class="rounded-circle me-2 border" width="40" height="40">
                <span class="fw-semibold">${player.username}</span>
              </a>
            </td>
            <td><input type="number" value="${player.balance}" data-id="${player.userId}" data-field="balance" class="form-control form-control-sm"/></td>
            <td><input type="number" value="${player.level}" data-id="${player.userId}" data-field="level" class="form-control form-control-sm"/></td>
            <td><input type="number" value="${player.experience}" data-id="${player.userId}" data-field="experience" class="form-control form-control-sm"/></td>
            <td><input type="number" value="${player.swag.balloon}" data-id="${player.userId}" data-field="swag.balloon" class="form-control form-control-sm"/></td>
            <td><input type="number" value="${player.swag.mobile}" data-id="${player.userId}" data-field="swag.mobile" class="form-control form-control-sm"/></td>
            <td><input type="number" value="${player.swag.bike}" data-id="${player.userId}" data-field="swag.bike" class="form-control form-control-sm"/></td>
            <td><input type="number" value="${player.swag.car}" data-id="${player.userId}" data-field="swag.car" class="form-control form-control-sm"/></td>
            <td><input type="number" value="${player.swag.castle}" data-id="${player.userId}" data-field="swag.castle" class="form-control form-control-sm"/></td>
            <td><input type="number" value="${player.maxBet || 0}" data-id="${player.userId}" data-field="maxBet" class="form-control form-control-sm"/></td>
            <td><input type="number" value="${player.multiplier || 1}" step="0.01" data-id="${player.userId}" data-field="multiplier" class="form-control form-control-sm"/></td>
            <td>
              <button class="btn btn-success btn-sm save-player" data-id="${player.userId}">
                <i class="bi bi-save"></i>
              </button>
            </td>
          </tr>
        `
      )
      .join("");

    // üîπ Paginaci√≥n
    pagination.innerHTML = `
      <nav>
        <ul class="pagination justify-content-center">
          <li class="page-item ${data.page === 1 ? "disabled" : ""}">
            <a class="page-link" href="#" id="prev-page">Previous</a>
          </li>
          <li class="page-item disabled">
            <span class="page-link">Page ${data.page} of ${data.totalPages}</span>
          </li>
          <li class="page-item ${data.page === data.totalPages ? "disabled" : ""}">
            <a class="page-link" href="#" id="next-page">Next</a>
          </li>
        </ul>
      </nav>
    `;

    document.getElementById("prev-page")?.addEventListener("click", (e) => {
      e.preventDefault();
      if (data.page > 1) loadPlayers(query, data.page - 1);
    });

    document.getElementById("next-page")?.addEventListener("click", (e) => {
      e.preventDefault();
      if (data.page < data.totalPages) loadPlayers(query, data.page + 1);
    });
  }

  // üîπ Buscar jugadores
  searchInput.addEventListener("input", () => loadPlayers(searchInput.value, 1));

  // üîπ Recargar jugadores
  reloadBtn.addEventListener("click", () => loadPlayers(searchInput.value, 1));

  // üîπ Guardar cambios de un jugador
  document.addEventListener("click", async (e) => {
    if (e.target.closest(".save-player")) {
      const userId = e.target.closest(".save-player").dataset.id;
      const inputs = [...document.querySelectorAll(`[data-id="${userId}"]`)];
      const updatedData = {};

      inputs.forEach((input) => {
        updatedData[input.dataset.field] = input.value;
      });

      await fetch(`/servers/<%= guild.guildId %>/players/${userId}`, {
        method: "PATCH",
        headers: {
          "Content-Type": "application/json",
          "CSRF-Token": "<%= csrfToken %>",
        },
        body: JSON.stringify(updatedData),
      });
    }
  });

  // üîπ Cargar jugadores cuando se abre la pesta√±a
  document
    .querySelector('[data-bs-target="#players"]')
    .addEventListener("shown.bs.tab", () => loadPlayers());
</script>

<script>
  document.querySelectorAll("input[type='checkbox']").forEach((input) => {
    input.addEventListener("change", () => {
      const circle = input.nextElementSibling;
      circle.style.background = input.checked ? "#28a745" : "#ccc";
    });
  });
</script>

<script>
  const form = document.getElementById("settings-form");

  form.addEventListener("submit", async (e) => {
    e.preventDefault();

    const csrfToken = form.querySelector('input[name="_csrf"]').value;
    const formData = new FormData(form);
    const formObject = Object.fromEntries(formData.entries());

    try {
      const res = await fetch("/servers/<%= guild.guildId %>/settings", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          "CSRF-Token": csrfToken,
        },
        body: JSON.stringify(formObject),
      });

      const data = await res.json();

      document.getElementById("responseTitle").textContent = data.success ? "‚úÖ Success" : "‚ùå Error";
      document.getElementById("responseMessage").textContent = data.message;

      new bootstrap.Modal(document.getElementById("responseModal")).show();
    } catch (err) {
      console.error("‚ùå Error sending settings:", err);
    }
  });

  document.querySelectorAll('[data-bs-toggle="tab"]').forEach((tab) => {
    tab.addEventListener("click", (e) => {
      e.preventDefault();
      new bootstrap.Tab(tab).show();
    });
  });
</script>

    <%- include('partials/footer') %>
  </body>
</html>

